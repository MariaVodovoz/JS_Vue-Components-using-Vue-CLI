{"remainingRequest":"C:\\develop\\Geprgian_Act4_Vue_Components\\heroes\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\develop\\Geprgian_Act4_Vue_Components\\heroes\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\develop\\Geprgian_Act4_Vue_Components\\heroes\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\Geprgian_Act4_Vue_Components\\heroes\\src\\App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"C:\\develop\\Geprgian_Act4_Vue_Components\\heroes\\src\\App.vue","mtime":1606877348632},{"path":"C:\\develop\\Geprgian_Act4_Vue_Components\\heroes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606873257823},{"path":"C:\\develop\\Geprgian_Act4_Vue_Components\\heroes\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1606873275494},{"path":"C:\\develop\\Geprgian_Act4_Vue_Components\\heroes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606873257823},{"path":"C:\\develop\\Geprgian_Act4_Vue_Components\\heroes\\node_modules\\vue-loader\\lib\\index.js","mtime":1606873275494}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}